FUNCTIONAL PROGRAMMING

function mapForEach(arr, fn) {

    var newArr = [];

    for (var i = 0; i < arr.length; i++) {
        newArr.push(
            fn(arr[i])

        )
    };

    return newArr;
}

var arr4 = [1, 2, 3];

var arr3 = mapForEach(arr1, function(item) {
    return item * 2;
});

console.log(arr3); // [2, 4, 6]


************** REGULAR PROGRAMMING

var arr1 = [1, 2, 3];
console.log(arr1);

var arr2 = [];

for (var i = 0; i < arr1.length; i++) {

    arr2.push(arr[i] * 2);
}

console.log(arr2); // [2, 4, 6]

************** USING BIND()

var checkPastLimit = function(limiter, item) {
    return item > limiter;
}

// limiter = 1, item will equal whatever value the for loop
// will assign to i.
var arr5 = mapForEach(arr4, checkPastLimit.bind(this, 1));
console.log(arr5);

var limiterSet = function(limiter) {
    return function(limiter, item) {
        return item > limiter;
    }.bind(this, limiter);
}

var arr7 = mapForEach(arr4, limiterSet(2));
console.log(arr7); // [false, false, true]
