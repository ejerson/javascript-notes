SYNCHRONOUS: codes are executed one line at a time.

SINGLE THREADED: one command at a time, javascript behaves in
a single threaded manner.
VARIABLE ENVIRONMENTS: where the variable lives and how
the relate to each other in memory.

COERCION: converting a value from one type to another (casting)
  var a = 1 + "2"; // "12"

JSON: JavaScript Object Notation

EXPRESSION: A unit of code that results in a value.

ANONYMOUS FUNCTION: can be referenced using a variable name.

FUNCTIONAL PROGRAMMING:  Able to pass functions inside another
  function.

GARBAGE COLLECTION: When an execution context has finished, javascript
  will eventually clear-out the memory.

FREEE VARIABLES: Are variables that are outside a function that it
  has access to.

CALLBACK FUNCTION: A function you give to another function, to be
  run when the other function is finished.

FUNCTION CURRYING: Creating a copy of a function but with
  some preset parameters
  (check: Objects and Functions/call(), apply(), bind()/call(), apply(), and bind())
